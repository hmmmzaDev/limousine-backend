name: CI/CD Pipeline

on: [push]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}
  CONTAINER_NAME: ${{ github.event.repository.name }}-container
  APP_PORT: 5000

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to production server
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.PRODUCTION_HOST }}
          USER: ${{ secrets.PRODUCTION_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          # SSH into the server and update the running container
          ssh -o StrictHostKeyChecking=no -i private_key.pem -t $USER@$HOST "
            docker pull ${{ env.DOCKER_IMAGE }}:latest && \
            docker stop ${{ env.CONTAINER_NAME }} || true && \
            docker rm ${{ env.CONTAINER_NAME }} || true && \
            docker run -d -p ${{ env.APP_PORT }}:${{ env.APP_PORT }} --name ${{ env.CONTAINER_NAME }} ${{ env.DOCKER_IMAGE }}:latest
          "

          # Clean up the private key after deployment
          rm -f private_key.pem
